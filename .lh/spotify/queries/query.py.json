{
    "sourceFile": "spotify/queries/query.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1671724399201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1671724414103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,8 @@\n         list_of_song_comments.append(result['comment']['value'])\r\n         list_of_artist_labels.append(result['artistLabel']['value'])\r\n         list_of_album_labels.append(result['albumsLabel']['value'])\r\n         list_of_writer_labels.append(result['writersLabel']['value'])\r\n-    return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artistLabels\": list_of_artist_labels, \"album labels\": list_of_album_labels, \"writer labels\": list_of_writer_labels}\r\n+    return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album labels\": list_of_album_labels, \"writer labels\": list_of_writer_labels}\r\n \r\n # print(get_songs_and_artists())\r\n print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n"
                },
                {
                    "date": 1671724420254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,8 @@\n         list_of_song_comments.append(result['comment']['value'])\r\n         list_of_artist_labels.append(result['artistLabel']['value'])\r\n         list_of_album_labels.append(result['albumsLabel']['value'])\r\n         list_of_writer_labels.append(result['writersLabel']['value'])\r\n-    return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album labels\": list_of_album_labels, \"writer labels\": list_of_writer_labels}\r\n+    return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album_labels\": list_of_album_labels, \"writer_labels\": list_of_writer_labels}\r\n \r\n # print(get_songs_and_artists())\r\n print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n"
                },
                {
                    "date": 1671734038018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,58 +16,78 @@\n     \"dbc\": \"http://dbpedia.org/page/Category:\",\r\n }\r\n \r\n def get_songs_and_artists():\r\n-    sparql = SPARQLWrapper(\"http://dbpedia.org/sparql\")\r\n-    sparql.setQuery(\r\n-    \"\"\"\r\n-    PREFIX dbo: <http://dbpedia.org/ontology/>\r\n-    PREFIX dbr: <http://dbpedia.org/resource/>\r\n-    SELECT distinct ?songLabel ?artistLabel\r\n-    WHERE {\r\n-        ?song a dbo:Song .\r\n-        ?song dbo:artist ?artist .\r\n-        ?song rdfs:label ?songLabel .\r\n-        ?artist rdfs:label ?artistLabel .\r\n-        FILTER (langMatches(lang(?artistLabel), \"EN\") && langMatches(lang(?artistLabel), \"EN\"))\r\n-    }\r\n-    ORDER BY ASC(?song)\r\n-    LIMIT 20\r\n-    \"\"\")\r\n-    sparql.setReturnFormat(JSON)\r\n-    results = sparql.query().convert()[\"results\"][\"bindings\"]\r\n+    filename = \"static/spotify_dataset.ttl\"\r\n+    rdfextras.registerplugins()\r\n \r\n+    local_graph = rdflib.Graph()\r\n+    local_graph.parse(filename, format='n3')\r\n+\r\n+    # TODO: Handle regex query\r\n+    results = local_graph.query(\"\"\"\r\n+        prefix : <http://lofiradioboysandgirls.up.railway.app/data/>\r\n+        prefix owl: <http://www.w3.org/2002/07/owl#>\r\n+        prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n+        prefix xml: <http://www.w3.org/XML/1998/namespace>\r\n+        prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n+        prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n+        prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n+        base <http://www.w3.org/2002/07/owl#>\r\n+         SELECT distinct ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel)\r\n+        WHERE {\r\n+            ?song :artist ?artist .\r\n+            ?song :songName ?songLabel .\r\n+            ?artist rdfs:label ?artistLabel .\r\n+        }\r\n+        GROUP BY ?songLabel\r\n+        ORDER BY ASC (?songLabel)\r\n+        LIMIT 50\r\n+        \"\"\"\r\n+    )\r\n     list_of_songs = []\r\n     list_of_artists = []\r\n     for result in results:\r\n-        list_of_songs.append(result['songLabel']['value'])\r\n-        list_of_artists.append(result['artistLabel']['value'])\r\n+        list_of_songs.append(result['songLabel'].toPython())\r\n+        list_of_artists.append(result['artistLabel'].toPython())\r\n     return {\"songs\": list_of_songs, \"artists\": list_of_artists}\r\n-\r\n+    \r\n def get_song_detail(songLabel, artistLabel):\r\n     sparql = SPARQLWrapper(\"http://dbpedia.org/sparql\")\r\n     songLabel = f\"\\\"{songLabel}\\\"\"\r\n     artistLabel = f\"\\\"{artistLabel}\\\"\"\r\n     query = \"\"\"\r\n     PREFIX dbo: <http://dbpedia.org/ontology/>\r\n     PREFIX dbr: <http://dbpedia.org/resource/>\r\n-    SELECT distinct ?songLabel ?comment ?artistLabel (GROUP_CONCAT(?albumsLabel ; separator=\"; \") AS ?albumsLabel) (GROUP_CONCAT(?writersLabel ; separator=\"; \") AS ?writersLabel)\r\n+    SELECT distinct ?songLabel ?comment (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel) (GROUP_CONCAT(DISTINCT ?albumsLabel ; separator=\"; \") AS ?albumsLabel) (GROUP_CONCAT(DISTINCT ?writersLabel ; separator=\"; \") AS ?writersLabel)\r\n     WHERE {\r\n         ?song a dbo:Song .\r\n+        ?song rdfs:label ?songLabel .\r\n+\r\n+        OPTIONAL {\r\n         ?song dbo:artist ?artist .\r\n-        ?song rdfs:comment ?comment .\r\n-        ?song dbp:album ?album .\r\n-        ?song dbp:writer ?writers .\r\n+        ?artist rdfs:label ?artistLabel .\r\n+        }\r\n+\r\n+        OPTIONAL {\r\n+            ?song rdfs:comment ?comment .\r\n+        }\r\n+        \r\n+        OPTIONAL {\r\n+            ?song dbp:album ?album .\r\n+            ?album rdfs:label ?albumsLabel .\r\n+        }\r\n+\r\n+        OPTIONAL {\r\n+            ?song dbp:writer ?writers .\r\n+            ?writers rdfs:label ?writersLabel .\r\n+        }\r\n+        \r\n         ?song dbo:producer ?producers .\r\n-\r\n         ?producers rdfs:label ?producersLabel .\r\n-        ?writers rdfs:label ?writersLabel .\r\n-        ?album rdfs:label ?albumsLabel .\r\n-        ?song rdfs:label ?songLabel .\r\n-        ?artist rdfs:label ?artistLabel .\r\n         FILTER (langMatches(lang(?artistLabel), \"EN\") && langMatches(lang(?songLabel), \"EN\") &&\r\n         langMatches(lang(?albumsLabel), \"EN\") && langMatches(lang(?writersLabel), \"EN\") &&\r\n-        langMatches(lang(?producersLabel), \"EN\") && langMatches(lang(?comment), \"EN\") && ?songLabel = \"\"\" + songLabel + \"@en\" + \"&& ?artistLabel = \" + artistLabel + \"@en)}\" \r\n+        langMatches(lang(?producersLabel), \"EN\") && langMatches(lang(?comment), \"EN\") && ?songLabel = \"\"\" + songLabel + \"@en\" + \"&& ?artistLabel = \" + artistLabel + \"@en)} GROUP BY ?songLabel ?comment\"\r\n     sparql.setQuery(query)\r\n     sparql.setReturnFormat(JSON)\r\n     results = sparql.query().convert()[\"results\"][\"bindings\"]\r\n \r\n@@ -83,7 +103,76 @@\n         list_of_artist_labels.append(result['artistLabel']['value'])\r\n         list_of_album_labels.append(result['albumsLabel']['value'])\r\n         list_of_writer_labels.append(result['writersLabel']['value'])\r\n     return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album_labels\": list_of_album_labels, \"writer_labels\": list_of_writer_labels}\r\n+# print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n \r\n+def check_local_store(songLabel, artistLabel):\r\n+    filename = \"static/spotify_dataset.ttl\"\r\n+    rdfextras.registerplugins()\r\n+\r\n+    local_graph = rdflib.Graph()\r\n+    local_graph.parse(filename, format='n3')\r\n+\r\n+    # TODO: Handle regex query\r\n+    results = local_graph.query(\"\"\"\r\n+        prefix : <http://lofiradioboysandgirls.up.railway.app/data/>\r\n+        prefix owl: <http://www.w3.org/2002/07/owl#>\r\n+        prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n+        prefix xml: <http://www.w3.org/XML/1998/namespace>\r\n+        prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n+        prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n+        prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n+        base <http://www.w3.org/2002/07/owl#>\r\n+        SELECT distinct ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n+        WHERE {\r\n+            ?song :highestChartingPosition ?highestChartingPosition .\r\n+            ?song :popularity ?popularity .\r\n+            ?song :streams ?streams .\r\n+            ?song :hasAttribute ?musicAttributes .\r\n+            ?song :chord ?chord .\r\n+            ?song :releaseDate ?releaseDate .\r\n+            ?song :artist ?artist .\r\n+            ?artist rdfs:label ?artistLabel .\r\n+            ?chord rdfs:label ?chordLabel\r\n+            OPTIONAL {\r\n+            ?musicAttributes :energy ?energy .\r\n+            }\r\n+            OPTIONAL {\r\n+            ?musicAttributes :loudness ?loudness .\r\n+            }\r\n+            OPTIONAL {\r\n+            ?musicAttributes :tempo ?tempo .\r\n+            }\r\n+            OPTIONAL {\r\n+                ?musicAttributes :speechiness ?speechiness .\r\n+            }\r\n+            ?song :songName ?songLabel .\r\n+            FILTER (REGEX(?songLabel, \"(?i).*%s.*\") && REGEX(?artistLabel, \"(?i).*%s.*\"))\r\n+        }\r\n+        GROUP BY ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo ?speechiness ?releaseDate\r\n+        \"\"\" %(songLabel, artistLabel))\r\n+    list_of_highest_charting_positions = []\r\n+    list_of_popularities = []\r\n+    list_of_streams = []\r\n+    list_of_energies = []\r\n+    list_of_loudness = []\r\n+    list_of_tempos = []\r\n+    list_of_chord_labels = []\r\n+    list_of_speechiness = []\r\n+    list_of_release_dates = []\r\n+\r\n+    for row in results:\r\n+        list_of_highest_charting_positions.append(row[\"highestChartingPosition\"].toPython())\r\n+        list_of_popularities.append(row[\"popularity\"].toPython())\r\n+        list_of_streams.append(row[\"streams\"].toPython())\r\n+        list_of_energies.append(row[\"energy\"].toPython())\r\n+        list_of_loudness.append(row[\"loudness\"].toPython())\r\n+        list_of_tempos.append(row[\"tempo\"].toPython())\r\n+        list_of_chord_labels.append(row[\"chordLabel\"].toPython())\r\n+        list_of_speechiness.append(row[\"speechiness\"].toPython())\r\n+        list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n+    \r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}\r\n+res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n+print(res)\r\n # print(get_songs_and_artists())\r\n-print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n"
                },
                {
                    "date": 1671735009771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n         prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n         prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n         prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n         base <http://www.w3.org/2002/07/owl#>\r\n-        SELECT distinct ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n+        SELECT distinct ?songLabel ?artistLabel ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n         WHERE {\r\n             ?song :highestChartingPosition ?highestChartingPosition .\r\n             ?song :popularity ?popularity .\r\n             ?song :streams ?streams .\r\n@@ -159,8 +159,10 @@\n     list_of_tempos = []\r\n     list_of_chord_labels = []\r\n     list_of_speechiness = []\r\n     list_of_release_dates = []\r\n+    list_of_song_labels = []\r\n+    list_of_artist_labels = []\r\n \r\n     for row in results:\r\n         list_of_highest_charting_positions.append(row[\"highestChartingPosition\"].toPython())\r\n         list_of_popularities.append(row[\"popularity\"].toPython())\r\n@@ -170,9 +172,10 @@\n         list_of_tempos.append(row[\"tempo\"].toPython())\r\n         list_of_chord_labels.append(row[\"chordLabel\"].toPython())\r\n         list_of_speechiness.append(row[\"speechiness\"].toPython())\r\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n+        list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n+        list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}\r\n-res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735060888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,7 +175,8 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}\r\n+    res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735114207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,8 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates}\r\n-    res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\"}\r\n+\r\n+res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735119513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\"}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735133120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735140476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_label\"}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735148614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_label\"}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_label\":list_of_artist_labels}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671735951381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_label\":list_of_artist_labels}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671747593901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,9 +175,9 @@\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_label\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749183772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"Hasta Que Dios Diga\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG%20(I%20Know%20I%20Love%20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749190259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG%20(I%20Know%20I%20Love%20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG 20(I 20Know%20I%20Love%20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749197033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG 20(I 20Know%20I%20Love%20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG 20(I 20Know 20I 20Love%20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749212388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG 20(I 20Know 20I 20Love%20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG 20(I Know 20I 20Love 20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749219798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG 20(I Know 20I 20Love 20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know 20I 20Love 20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749225395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know 20I 20Love 20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love 20you)\", \"anuel AA\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749257534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love 20you)\", \"anuel AA\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_%20TOMORROW%20X%20TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749265120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_%20TOMORROW%20X%20TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_ TOMORROW X%20TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749270898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_ TOMORROW X%20TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749344113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROWX TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749396508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROWX TOGETHER\")\r\n+res = check_local_store(\"Red Light Green Light\", \"Seori|TOMORROWXTOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749461035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"Red Light Green Light\", \"Seori|TOMORROWXTOGETHER\")\r\n+res = check_local_store(\"Red Light Green Light\", \"DaBaby\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749508366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"Red Light Green Light\", \"DaBaby\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"DaBaby\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749525729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"DaBaby\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749545016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,7 +177,7 @@\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n \r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749620559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n     return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album_labels\": list_of_album_labels, \"writer_labels\": list_of_writer_labels}\r\n # print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n \r\n def check_local_store(songLabel, artistLabel):\r\n+    def check_local_store(songLabel, artistLabel):\r\n     filename = \"static/spotify_dataset.ttl\"\r\n     rdfextras.registerplugins()\r\n \r\n     local_graph = rdflib.Graph()\r\n@@ -122,17 +123,19 @@\n         prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n         prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n         prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n         base <http://www.w3.org/2002/07/owl#>\r\n-        SELECT distinct ?songLabel ?artistLabel ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n+        SELECT distinct (GROUP_CONCAT(DISTINCT ?genreLabel ; separator=\"; \") AS ?genreLabel) ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel) ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n         WHERE {\r\n             ?song :highestChartingPosition ?highestChartingPosition .\r\n             ?song :popularity ?popularity .\r\n             ?song :streams ?streams .\r\n             ?song :hasAttribute ?musicAttributes .\r\n             ?song :chord ?chord .\r\n             ?song :releaseDate ?releaseDate .\r\n             ?song :artist ?artist .\r\n+            ?song :genre ?genre .\r\n+            ?genre rdfs:label ?genreLabel .\r\n             ?artist rdfs:label ?artistLabel .\r\n             ?chord rdfs:label ?chordLabel\r\n             OPTIONAL {\r\n             ?musicAttributes :energy ?energy .\r\n@@ -148,9 +151,9 @@\n             }\r\n             ?song :songName ?songLabel .\r\n             FILTER (REGEX(?songLabel, \"(?i).*%s.*\") && REGEX(?artistLabel, \"(?i).*%s.*\"))\r\n         }\r\n-        GROUP BY ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo ?speechiness ?releaseDate\r\n+        GROUP BY ?songLabel ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo ?speechiness ?releaseDate\r\n         \"\"\" %(songLabel, artistLabel))\r\n     list_of_highest_charting_positions = []\r\n     list_of_popularities = []\r\n     list_of_streams = []\r\n@@ -161,8 +164,9 @@\n     list_of_speechiness = []\r\n     list_of_release_dates = []\r\n     list_of_song_labels = []\r\n     list_of_artist_labels = []\r\n+    list_of_genres = []\r\n \r\n     for row in results:\r\n         list_of_highest_charting_positions.append(row[\"highestChartingPosition\"].toPython())\r\n         list_of_popularities.append(row[\"popularity\"].toPython())\r\n@@ -174,10 +178,12 @@\n         list_of_speechiness.append(row[\"speechiness\"].toPython())\r\n         list_of_release_dates.append(row[\"releaseDate\"].toPython().strftime(\"%d %B, %Y\"))\r\n         list_of_song_labels.append(row[\"songLabel\"].toPython())\r\n         list_of_artist_labels.append(row[\"artistLabel\"].toPython())\r\n+        list_of_genres.append(row[\"genreLabel\"].toPython())\r\n     \r\n-    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness, \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels, \"artist_labels\":list_of_artist_labels}\r\n-\r\n+    return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n+    \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n+    \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749641535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,8 @@\n     return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album_labels\": list_of_album_labels, \"writer_labels\": list_of_writer_labels}\r\n # print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n \r\n def check_local_store(songLabel, artistLabel):\r\n-    def check_local_store(songLabel, artistLabel):\r\n     filename = \"static/spotify_dataset.ttl\"\r\n     rdfextras.registerplugins()\r\n \r\n     local_graph = rdflib.Graph()\r\n"
                },
                {
                    "date": 1671749672729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,7 +182,7 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|Riton\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n"
                },
                {
                    "date": 1671749741926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,45 @@\n     \"dct\": \"http://purl.org/dc/terms/\",\r\n     \"dbc\": \"http://dbpedia.org/page/Category:\",\r\n }\r\n \r\n+def search_song_or_artist(keyword):\r\n+    filename = \"static/spotify_dataset.ttl\"\r\n+    rdfextras.registerplugins()\r\n+\r\n+    local_graph = rdflib.Graph()\r\n+    local_graph.parse(filename, format='n3')\r\n+\r\n+    # TODO: Handle regex query\r\n+    results = local_graph.query(\"\"\"\r\n+        prefix : <http://lofiradioboysandgirls.up.railway.app/data/>\r\n+        prefix owl: <http://www.w3.org/2002/07/owl#>\r\n+        prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\n+        prefix xml: <http://www.w3.org/XML/1998/namespace>\r\n+        prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n+        prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n+        prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n+        base <http://www.w3.org/2002/07/owl#>\r\n+\r\n+        SELECT distinct ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"_ \") AS ?artistLabel)\r\n+        WHERE {\r\n+            ?song :artist ?artist .\r\n+            ?song :songName ?songLabel .\r\n+            ?artist rdfs:label ?artistLabel .\r\n+\r\n+            FILTER(CONTAINS(LCASE(?songLabel), \"%s\") || REGEX(?songLabel, \"(?i).*%s.*\") || CONTAINS(LCASE(?artistLabel), \"%s\") || REGEX(?artistLabel, \"(?i).*%s.*\"))\r\n+            }\r\n+        GROUP BY ?songLabel\r\n+        ORDER BY ASC (?songLabel)\r\n+        \"\"\" % (keyword, keyword, keyword, keyword)\r\n+    )\r\n+    list_of_songs = []\r\n+    list_of_artists = []\r\n+    for result in results:\r\n+        list_of_songs.append(result['songLabel'].toPython())\r\n+        list_of_artists.append(result['artistLabel'].toPython())\r\n+    return {\"songs\": list_of_songs, \"artists\": list_of_artists}\r\n+\r\n def get_songs_and_artists():\r\n     filename = \"static/spotify_dataset.ttl\"\r\n     rdfextras.registerplugins()\r\n \r\n@@ -32,9 +69,9 @@\n         prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n         prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n         prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n         base <http://www.w3.org/2002/07/owl#>\r\n-         SELECT distinct ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel)\r\n+         SELECT distinct ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"_ \") AS ?artistLabel)\r\n         WHERE {\r\n             ?song :artist ?artist .\r\n             ?song :songName ?songLabel .\r\n             ?artist rdfs:label ?artistLabel .\r\n@@ -57,9 +94,9 @@\n     artistLabel = f\"\\\"{artistLabel}\\\"\"\r\n     query = \"\"\"\r\n     PREFIX dbo: <http://dbpedia.org/ontology/>\r\n     PREFIX dbr: <http://dbpedia.org/resource/>\r\n-    SELECT distinct ?songLabel ?comment (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel) (GROUP_CONCAT(DISTINCT ?albumsLabel ; separator=\"; \") AS ?albumsLabel) (GROUP_CONCAT(DISTINCT ?writersLabel ; separator=\"; \") AS ?writersLabel)\r\n+    SELECT distinct ?songLabel ?comment (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"_ \") AS ?artistLabel) (GROUP_CONCAT(DISTINCT ?albumsLabel ; separator=\"_ \") AS ?albumsLabel) (GROUP_CONCAT(DISTINCT ?writersLabel ; separator=\"_ \") AS ?writersLabel)\r\n     WHERE {\r\n         ?song a dbo:Song .\r\n         ?song rdfs:label ?songLabel .\r\n \r\n@@ -103,9 +140,8 @@\n         list_of_artist_labels.append(result['artistLabel']['value'])\r\n         list_of_album_labels.append(result['albumsLabel']['value'])\r\n         list_of_writer_labels.append(result['writersLabel']['value'])\r\n     return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artist_labels\": list_of_artist_labels, \"album_labels\": list_of_album_labels, \"writer_labels\": list_of_writer_labels}\r\n-# print(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n \r\n def check_local_store(songLabel, artistLabel):\r\n     filename = \"static/spotify_dataset.ttl\"\r\n     rdfextras.registerplugins()\r\n@@ -122,9 +158,9 @@\n         prefix xsd: <http://www.w3.org/2001/XMLSchema#>\r\n         prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n         prefix vcard: <http://www.w3.org/2006/vcard/ns#>\r\n         base <http://www.w3.org/2002/07/owl#>\r\n-        SELECT distinct (GROUP_CONCAT(DISTINCT ?genreLabel ; separator=\"; \") AS ?genreLabel) ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"; \") AS ?artistLabel) ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"; \") AS ?chordLabel) ?speechiness ?releaseDate\r\n+        SELECT distinct (GROUP_CONCAT(DISTINCT ?genreLabel ; separator=\"; \") AS ?genreLabel) ?songLabel (GROUP_CONCAT(DISTINCT ?artistLabel ; separator=\"_ \") AS ?artistLabel) ?highestChartingPosition ?popularity ?streams ?energy ?loudness ?tempo (GROUP_CONCAT(DISTINCT ?chordLabel ; separator=\"_ \") AS ?chordLabel) ?speechiness ?releaseDate\r\n         WHERE {\r\n             ?song :highestChartingPosition ?highestChartingPosition .\r\n             ?song :popularity ?popularity .\r\n             ?song :streams ?streams .\r\n@@ -182,7 +218,10 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens\")\r\n+res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n+# result = search_song_or_artist(\"anue\")\r\n+# for row in result:\r\n+#     print(row)\r\n"
                },
                {
                    "date": 1671749747869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749755262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens\")\r\n+res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749832173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Turn Me On (feat. Vula)\", \"Oliver Heldens|Riton\")\r\n+res = check_local_store(\"0X1=LOVESONG%20(I%20Know%20I%20Love%20you)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749838761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG%20(I%20Know%20I%20Love%20you)\", \"Oliver Heldens|Riton\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know%20I%20Love%20you)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749845014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know%20I%20Love%20you)\", \"Oliver Heldens|Riton\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Oliver Heldens|Riton\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749856447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Oliver Heldens|Riton\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_%20TOMORROW%20X%20TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749861738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori_%20TOMORROW%20X%20TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"SeorTOMORROW%20X%20TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749868085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"SeorTOMORROW%20X%20TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X%20TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749905670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X%20TOGETHER\")\r\n+res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749913664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X TOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749945631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROW X TOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROWXTOGETHER\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671749970403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori|TOMORROWXTOGETHER\")\r\n+res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori\")\r\n print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n"
                },
                {
                    "date": 1671752499570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,10 +218,10 @@\n     \r\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n-res = check_local_store(\"0X1=LOVESONG (I Know I Love you)\", \"Seori\")\r\n-print(res)\r\n+res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n+# print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n #     print(row)\r\n"
                },
                {
                    "date": 1671753044825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n     return {\"charting_positions\": list_of_highest_charting_positions, \"popularities\": list_of_popularities, \"streams\": list_of_streams, \"energies\": list_of_energies, \"loudness\": list_of_loudness,\r\n     \"tempos\": list_of_tempos, \"chord_labels\": list_of_chord_labels, \"speechiness\": list_of_speechiness, \"release_dates\": list_of_release_dates, \"song_labels\":list_of_song_labels,\r\n     \"artist_labels\":list_of_artist_labels, \"genres\":list_of_genres}\r\n res = check_local_store(\"Hasta Que Dios Diga\", \"Bad Bunny\")\r\n-# print(res)\r\n+print(res)\r\n # print(get_songs_and_artists())\r\n # result = search_song_or_artist(\"anue\")\r\n # for row in result:\r\n #     print(row)\r\n"
                }
            ],
            "date": 1671724399201,
            "name": "Commit-0",
            "content": "import rdflib\r\nimport rdfextras\r\nfrom SPARQLWrapper import SPARQLWrapper, JSON\r\n\r\nprefix_dict = {\r\n    \"ex\": \"http://example.org/data/\",\r\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\r\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\r\n    \"dbr\": \"http://dbpedia.org/resource/\",\r\n    \"dbp\": \"http://dbpedia.org/property/\",\r\n    \"dbo\": \"http://dbpedia.org/ontology/\",\r\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\r\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\r\n    \"owl\": \"http://www.w3.org/2002/07/owl#\",\r\n    \"dct\": \"http://purl.org/dc/terms/\",\r\n    \"dbc\": \"http://dbpedia.org/page/Category:\",\r\n}\r\n\r\ndef get_songs_and_artists():\r\n    sparql = SPARQLWrapper(\"http://dbpedia.org/sparql\")\r\n    sparql.setQuery(\r\n    \"\"\"\r\n    PREFIX dbo: <http://dbpedia.org/ontology/>\r\n    PREFIX dbr: <http://dbpedia.org/resource/>\r\n    SELECT distinct ?songLabel ?artistLabel\r\n    WHERE {\r\n        ?song a dbo:Song .\r\n        ?song dbo:artist ?artist .\r\n        ?song rdfs:label ?songLabel .\r\n        ?artist rdfs:label ?artistLabel .\r\n        FILTER (langMatches(lang(?artistLabel), \"EN\") && langMatches(lang(?artistLabel), \"EN\"))\r\n    }\r\n    ORDER BY ASC(?song)\r\n    LIMIT 20\r\n    \"\"\")\r\n    sparql.setReturnFormat(JSON)\r\n    results = sparql.query().convert()[\"results\"][\"bindings\"]\r\n\r\n    list_of_songs = []\r\n    list_of_artists = []\r\n    for result in results:\r\n        list_of_songs.append(result['songLabel']['value'])\r\n        list_of_artists.append(result['artistLabel']['value'])\r\n    return {\"songs\": list_of_songs, \"artists\": list_of_artists}\r\n\r\ndef get_song_detail(songLabel, artistLabel):\r\n    sparql = SPARQLWrapper(\"http://dbpedia.org/sparql\")\r\n    songLabel = f\"\\\"{songLabel}\\\"\"\r\n    artistLabel = f\"\\\"{artistLabel}\\\"\"\r\n    query = \"\"\"\r\n    PREFIX dbo: <http://dbpedia.org/ontology/>\r\n    PREFIX dbr: <http://dbpedia.org/resource/>\r\n    SELECT distinct ?songLabel ?comment ?artistLabel (GROUP_CONCAT(?albumsLabel ; separator=\"; \") AS ?albumsLabel) (GROUP_CONCAT(?writersLabel ; separator=\"; \") AS ?writersLabel)\r\n    WHERE {\r\n        ?song a dbo:Song .\r\n        ?song dbo:artist ?artist .\r\n        ?song rdfs:comment ?comment .\r\n        ?song dbp:album ?album .\r\n        ?song dbp:writer ?writers .\r\n        ?song dbo:producer ?producers .\r\n\r\n        ?producers rdfs:label ?producersLabel .\r\n        ?writers rdfs:label ?writersLabel .\r\n        ?album rdfs:label ?albumsLabel .\r\n        ?song rdfs:label ?songLabel .\r\n        ?artist rdfs:label ?artistLabel .\r\n        FILTER (langMatches(lang(?artistLabel), \"EN\") && langMatches(lang(?songLabel), \"EN\") &&\r\n        langMatches(lang(?albumsLabel), \"EN\") && langMatches(lang(?writersLabel), \"EN\") &&\r\n        langMatches(lang(?producersLabel), \"EN\") && langMatches(lang(?comment), \"EN\") && ?songLabel = \"\"\" + songLabel + \"@en\" + \"&& ?artistLabel = \" + artistLabel + \"@en)}\" \r\n    sparql.setQuery(query)\r\n    sparql.setReturnFormat(JSON)\r\n    results = sparql.query().convert()[\"results\"][\"bindings\"]\r\n\r\n    list_of_song_labels = []\r\n    list_of_song_comments = []\r\n    list_of_artist_labels = []\r\n    list_of_album_labels = []\r\n    list_of_writer_labels = []\r\n\r\n    for result in results:\r\n        list_of_song_labels.append(result['songLabel']['value'])\r\n        list_of_song_comments.append(result['comment']['value'])\r\n        list_of_artist_labels.append(result['artistLabel']['value'])\r\n        list_of_album_labels.append(result['albumsLabel']['value'])\r\n        list_of_writer_labels.append(result['writersLabel']['value'])\r\n    return {\"songs\": list_of_song_labels, \"comments\": list_of_song_comments, \"artistLabels\": list_of_artist_labels, \"album labels\": list_of_album_labels, \"writer labels\": list_of_writer_labels}\r\n\r\n# print(get_songs_and_artists())\r\nprint(get_song_detail(\"What About Now (Daughtry song)\", \"Daughtry (band)\"))\r\n"
        }
    ]
}